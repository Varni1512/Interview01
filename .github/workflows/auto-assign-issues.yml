# Name of the workflow
name: Automatic Issue Assignment and Labeling

# Events that trigger the workflow
on:
  issues:
    types: [opened, reopened]
  workflow_dispatch:

# Permissions required for the workflow
permissions:
  issues: write

jobs:
  auto-assign-and-label:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Assign the issue
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number;
            const issueCreator = context.payload.issue.user.login;
            console.log(`Assigning issue #${issueNumber} to ${issueCreator}.`);
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              assignees: [issueCreator]
            });

      - name: Add assignment message
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hello @${{ github.event.issue.user.login }}! This issue has been assigned to you.

      - name: Add 'assigned' label and GSSoC tags
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number;
            console.log(`Adding labels to issue #${issueNumber}.`);
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['assigned', 'gssoc2025', 'gssoc', 'gssoc25']
            });

  process-old-issues:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Process old and unassigned issues
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            console.log('Looking for old and unassigned issues...');
            const { data: issues } = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open',
              per_page: 100
            });

            for (const issue of issues) {
              const issueNumber = issue.number;
              const issueCreator = issue.user.login;
              const isAssigned = issue.assignees && issue.assignees.length > 0;
              const hasAssignedLabel = issue.labels.some(label => label.name === 'assigned');

              if (!isAssigned && !hasAssignedLabel) {
                console.log(`Processing issue #${issueNumber}: No assignees and no 'assigned' label.`);

                try {
                  await github.rest.issues.addAssignees({
                    owner,
                    repo,
                    issue_number: issueNumber,
                    assignees: [issueCreator]
                  });
                  console.log(`Issue #${issueNumber} assigned to ${issueCreator}.`);
                } catch (error) {
                  console.error(`Error assigning issue #${issueNumber}: ${error.message}`);
                }

                try {
                  await github.rest.issues.createComment({
                    owner,
                    repo,
                    issue_number: issueNumber,
                    body: `Hello @${issueCreator}! This issue has been assigned to you.`
                  });
                  console.log(`Comment added to issue #${issueNumber}.`);
                } catch (error) {
                  console.error(`Error adding comment to issue #${issueNumber}: ${error.message}`);
                }

                try {
                  await github.rest.issues.addLabels({
                    owner,
                    repo,
                    issue_number: issueNumber,
                    labels: ['assigned', 'gssoc2025', 'gssoc', 'gssoc25']
                  });
                  console.log(`'assigned' and GSSoC tags added to issue #${issueNumber}.`);
                } catch (error) {
                  console.error(`Error adding labels to issue #${issueNumber}: ${error.message}`);
                }
              } else {
                console.log(`Skipping issue #${issueNumber}: Already assigned or has 'assigned' label.`);
              }
            }
            console.log('Finished processing old issues.');
